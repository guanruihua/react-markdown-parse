"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkreact_markdown_parse"] = self["webpackChunkreact_markdown_parse"] || []).push([["vendors-node_modules__check-it-type_0_4_2_check-it-type_lib_index_esm_js-node_modules__css-lo-895e40"],{

/***/ "./node_modules/_check-it-type@0.4.2@check-it-type/lib/index.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/_check-it-type@0.4.2@check-it-type/lib/index.esm.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EMPTY\": () => (/* binding */ EMPTY),\n/* harmony export */   \"FileTypeMap\": () => (/* binding */ FileTypeMap),\n/* harmony export */   \"INFINITY\": () => (/* binding */ INFINITY),\n/* harmony export */   \"IS\": () => (/* binding */ IS),\n/* harmony export */   \"MAX_VALUES_NUMBER\": () => (/* binding */ MAX_VALUES_NUMBER),\n/* harmony export */   \"MIN_VALUES_NUMBER\": () => (/* binding */ MIN_VALUES_NUMBER),\n/* harmony export */   \"hasOwn\": () => (/* binding */ hasOwn),\n/* harmony export */   \"isArray\": () => (/* binding */ isArray),\n/* harmony export */   \"isArrayIterator\": () => (/* binding */ isArrayIterator),\n/* harmony export */   \"isAsyncFunction\": () => (/* binding */ isAsyncFunction),\n/* harmony export */   \"isBigInt\": () => (/* binding */ isBigInt),\n/* harmony export */   \"isBoolean\": () => (/* binding */ isBoolean),\n/* harmony export */   \"isClient\": () => (/* binding */ isClient),\n/* harmony export */   \"isDate\": () => (/* binding */ isDate),\n/* harmony export */   \"isEffectArray\": () => (/* binding */ isEffectArray),\n/* harmony export */   \"isEffectFunction\": () => (/* binding */ isEffectFunction),\n/* harmony export */   \"isEffectMap\": () => (/* binding */ isEffectMap),\n/* harmony export */   \"isEffectNumber\": () => (/* binding */ isEffectNumber),\n/* harmony export */   \"isEffectObject\": () => (/* binding */ isEffectObject),\n/* harmony export */   \"isEffectSet\": () => (/* binding */ isEffectSet),\n/* harmony export */   \"isEmpty\": () => (/* binding */ isEmpty),\n/* harmony export */   \"isEmptyArray\": () => (/* binding */ isEmptyArray),\n/* harmony export */   \"isEmptyFunction\": () => (/* binding */ isEmptyFunction),\n/* harmony export */   \"isEmptyMap\": () => (/* binding */ isEmptyMap),\n/* harmony export */   \"isEmptyObject\": () => (/* binding */ isEmptyObject),\n/* harmony export */   \"isEmptySet\": () => (/* binding */ isEmptySet),\n/* harmony export */   \"isError\": () => (/* binding */ isError),\n/* harmony export */   \"isExcelFile\": () => (/* binding */ isExcelFile),\n/* harmony export */   \"isFile\": () => (/* binding */ isFile),\n/* harmony export */   \"isFileExtension\": () => (/* binding */ isFileExtension),\n/* harmony export */   \"isFloat\": () => (/* binding */ isFloat),\n/* harmony export */   \"isFunction\": () => (/* binding */ isFunction),\n/* harmony export */   \"isHexColor\": () => (/* binding */ isHexColor),\n/* harmony export */   \"isIOS\": () => (/* binding */ isIOS),\n/* harmony export */   \"isImageFile\": () => (/* binding */ isImageFile),\n/* harmony export */   \"isIterator\": () => (/* binding */ isIterator),\n/* harmony export */   \"isJsonString\": () => (/* binding */ isJsonString),\n/* harmony export */   \"isMap\": () => (/* binding */ isMap),\n/* harmony export */   \"isMapIterator\": () => (/* binding */ isMapIterator),\n/* harmony export */   \"isNaN\": () => (/* binding */ isNaN$1),\n/* harmony export */   \"isNoEmpty\": () => (/* binding */ isNoEmpty),\n/* harmony export */   \"isNull\": () => (/* binding */ isNull),\n/* harmony export */   \"isNumber\": () => (/* binding */ isNumber),\n/* harmony export */   \"isObject\": () => (/* binding */ isObject),\n/* harmony export */   \"isPdfFile\": () => (/* binding */ isPdfFile),\n/* harmony export */   \"isPromise\": () => (/* binding */ isPromise),\n/* harmony export */   \"isRegExp\": () => (/* binding */ isRegExp),\n/* harmony export */   \"isSet\": () => (/* binding */ isSet),\n/* harmony export */   \"isSetIterator\": () => (/* binding */ isSetIterator),\n/* harmony export */   \"isString\": () => (/* binding */ isString),\n/* harmony export */   \"isSymbol\": () => (/* binding */ isSymbol),\n/* harmony export */   \"isTime\": () => (/* binding */ isTime),\n/* harmony export */   \"isUndefined\": () => (/* binding */ isUndefined),\n/* harmony export */   \"isVideoFile\": () => (/* binding */ isVideoFile),\n/* harmony export */   \"isWindow\": () => (/* binding */ isWindow),\n/* harmony export */   \"isWordFile\": () => (/* binding */ isWordFile),\n/* harmony export */   \"likeDate\": () => (/* binding */ likeDate),\n/* harmony export */   \"likeFunction\": () => (/* binding */ likeFunction),\n/* harmony export */   \"likeNumber\": () => (/* binding */ likeNumber),\n/* harmony export */   \"type\": () => (/* binding */ type),\n/* harmony export */   \"types\": () => (/* binding */ types)\n/* harmony export */ });\n/**\r\n * @title isEmpty\r\n * @description 是无效值 undefined , null, NaN\r\n * @param value {unknown} 待值\r\n * @returns boolean\r\n */\r\nfunction isEmpty(value) {\r\n    return value === undefined || value === null || value !== value;\r\n}\r\n/**\r\n * @title isNoEmpty\r\n * @description 不是是无效值 undefined , null, NaN\r\n * @param value {unknown}\r\n * @returns boolean\r\n * @version 0.3.0\r\n */\r\nfunction isNoEmpty(value) {\r\n    return value !== undefined && value !== null && value === value;\r\n}\r\n/**\r\n * @title isNull\r\n * @param value {unknown}\r\n * @returns boolean\r\n */\r\nfunction isNull(value) {\r\n    return value === null;\r\n}\r\n/**\r\n * @title isUndefined\r\n * @param value {unknown}\r\n * @returns boolean\r\n */\r\nfunction isUndefined(value) {\r\n    return value === undefined;\r\n}\r\n/**\r\n * @title isNaN\r\n * @param value {unknown}\r\n * @returns boolean\r\n */\r\nconst isNaN$1 = Number.isNaN;\n\n/**\r\n * @title isArray\r\n * @description 是数组\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nconst isArray = Array.isArray;\r\n/**\r\n * @title isEmptyArray\r\n * @description 是空数组\r\n * @param list {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isEmptyArray(list) {\r\n    if (isEmpty(list))\r\n        return false;\r\n    return isArray(list) && list.length === 0;\r\n}\r\n/**\r\n * @title isEffectArray\r\n * @description 是有效数组\r\n * @param list {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isEffectArray(list) {\r\n    if (isEmpty(list))\r\n        return false;\r\n    return isArray(list) && list.length > 0;\r\n}\n\n/**\r\n * @title isIterator\r\n * @description 是iterator\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isIterator(value) {\r\n    if (typeof value !== 'object' || isEmpty(value))\r\n        return false;\r\n    return /Iterator\\]$/.test(value.toString());\r\n}\r\n/**\r\n * @title isArrayIterator\r\n * @description 是 Array Iterator\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isArrayIterator(value) {\r\n    if (typeof value !== 'object' || isEmpty(value))\r\n        return false;\r\n    return value.toString() === '[object Array Iterator]';\r\n}\r\n/**\r\n * @title isMapIterator\r\n * @description 是 Map Iterator\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isMapIterator(value) {\r\n    if (typeof value !== 'object' || isEmpty(value))\r\n        return false;\r\n    return value.toString() === '[object Map Iterator]';\r\n}\r\n/**\r\n * @title isSetIterator\r\n * @description 是 Set Iterator\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isSetIterator(value) {\r\n    if (typeof value !== 'object' || isEmpty(value))\r\n        return false;\r\n    return value.toString() === '[object Set Iterator]';\r\n}\n\nfunction type(param) {\r\n    try {\r\n        if (isIterator(param))\r\n            return 'Iterator';\r\n        const result = Object.prototype.toString\r\n            .call(param)\r\n            .match(/\\[object (\\w+)\\]/)[1];\r\n        if (result === 'Number' && isNaN(param))\r\n            return 'NaN';\r\n        return result;\r\n    }\r\n    catch (error) {\r\n        return 'Undefined';\r\n    }\r\n}\r\n/**\r\n * @title types\r\n * @description 获取类型数组\r\n * @param params {unknown[]} 待判断的参数列表\r\n * @param hasRepeat=false 保留重复类型\r\n * @return string[] 类型名称\r\n */\r\nfunction types(params, hasRepeat = false) {\r\n    if (!isArray(params))\r\n        return [];\r\n    const result = params.map(i => type(i)) || [];\r\n    return hasRepeat ? result : [...new Set(result)];\r\n}\n\n/**\r\n * @title isFunction\r\n * @description 是函数\r\n * @param value {unknown}\r\n * @param strict {boolean=false} 严格模式\r\n * @returns {boolean}\r\n */\r\nfunction isFunction(value, strict = false) {\r\n    if (strict) {\r\n        return typeof value === 'function';\r\n    }\r\n    return type(value) === 'Function';\r\n}\r\n/**\r\n * @title isAsyncFunction\r\n * @description 是异步函数\r\n * @param value {any}\r\n * @returns {boolean}\r\n */\r\nfunction isAsyncFunction(value) {\r\n    return type(value) === 'AsyncFunction';\r\n}\r\n/**\r\n * @title likeFunction\r\n * @description 是函数\r\n * @param value {any}\r\n * @returns {boolean}\r\n * @version 0.4.0\r\n */\r\nfunction likeFunction(value) {\r\n    return type(value) === 'Function' || type(value) === 'AsyncFunction';\r\n}\r\n/**\r\n * @title isEmptyFunction\r\n * @description 是空方法\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n * @version 0.4.0\r\n */\r\nfunction isEmptyFunction(value) {\r\n    if (isEmpty(value))\r\n        return false;\r\n    return isFunction(value) && /\\{\\}$/.test(value.toString().replaceAll(' ', ''));\r\n}\r\n/**\r\n * @title isEffectFunction\r\n * @description 是有效方法(非空方法)\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n * @version 0.4.0\r\n */\r\nfunction isEffectFunction(value) {\r\n    if (isEmpty(value))\r\n        return false;\r\n    return isFunction(value) && /\\{.+\\}$/.test(value.toString().replaceAll(' ', ''));\r\n}\n\nconst MAX_VALUES_NUMBER = 1.7976931348623157e+308;\r\nconst MIN_VALUES_NUMBER = -1.7976931348623157e+308;\r\nconst INFINITY = Infinity; // 无限\r\n/**\r\n * @description 空值(undefined, null, NaN)\r\n */\r\nconst EMPTY = [undefined, null, NaN];\n\n/**\r\n * @title isObject\r\n * @description 是Object\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isObject(value) {\r\n    return value !== null && typeof value === 'object' && type(value) === 'Object';\r\n}\r\n/**\r\n * @title isEmptyObject\r\n * @description 是空Object\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isEmptyObject(value) {\r\n    if (isEmpty(value))\r\n        return false;\r\n    return isObject(value) && Reflect.ownKeys(value).length === 0;\r\n}\r\n/**\r\n * @title isEffectObject\r\n * @description 是有效Object(非空)\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isEffectObject(value) {\r\n    if (isEmpty(value))\r\n        return false;\r\n    return isObject(value) && Reflect.ownKeys(value).length !== 0;\r\n}\n\n/**\r\n * @title isString\r\n * @description 是字符串\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isString(value) {\r\n    return typeof value === 'string';\r\n}\r\n/**\r\n * @title isJsonString<T>\r\n * @description 是json字符串, 若是并返回处理后的对象\r\n * @param val 待判断字符串\r\n * @returns T | false\r\n */\r\nfunction isJsonString(val) {\r\n    if (!isString(val))\r\n        return false;\r\n    try {\r\n        const obj = JSON.parse(val);\r\n        return isObject(obj) && obj;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\n\n/**\r\n * @title isNumber\r\n * @description 是数字\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nconst isNumber = (value) => {\r\n    return typeof value === 'number' && type(value) === 'Number';\r\n};\r\n/**\r\n * @title isEffectNumber\r\n * @description 是js的有效区间的数, 非number类型都为false\r\n * @param value {unknown}\r\n * @returns boolean\r\n */\r\nfunction isEffectNumber(value) {\r\n    if (type(value) === 'Number') {\r\n        if (value === INFINITY || value === -INFINITY)\r\n            return false;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @title isFloat\r\n * @description 判断数是浮点型\r\n * @param value {unknown} 待检测的数据类型\r\n * @returns boolean\r\n */\r\nfunction isFloat(value) {\r\n    if (!isNumber(value))\r\n        return false;\r\n    return (value % 1) !== 0;\r\n}\r\n/**\r\n * @title isBigInt\r\n * @description 是bigInt类型\r\n * @param value 待检测的数据类型\r\n * @returns {boolean}\r\n */\r\nconst isBigInt = (value) => type(value) === 'BigInt';\r\n/**\r\n * @title likeNumber\r\n * @description 是数字/数字字符串\r\n * @support: Number, NumberString\r\n * @unsupported: Infinity, Function\r\n * @param value any\r\n * @returns boolean\r\n * @version 0.1.0\r\n */\r\nfunction likeNumber(value) {\r\n    if (isNumber(value))\r\n        return true;\r\n    if (isString(value))\r\n        value = value.trim();\r\n    if (isEmpty(value)\r\n        || isArray(value)\r\n        || value === '')\r\n        return false;\r\n    if (Number.isNaN(Number(value)) === false) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * @title isDate\r\n * @description 检查日期是否有效\r\n * @param date {any} 待判断日期\r\n * @returns {boolean}\r\n * @version 0.1.0\r\n */\r\nfunction isDate(date) {\r\n    return type(date) === 'Date';\r\n}\r\n/**\r\n * @title likeDate\r\n * @description 检查日期是否有效, 时间戳也为有效时间(13位/10位)\r\n * @param date {any}\r\n * @returns {boolean}\r\n */\r\nfunction likeDate(date) {\r\n    if (isDate(date))\r\n        return true;\r\n    if ((isString(date) && isNumber(Number(date)))\r\n        || isNumber(date)) {\r\n        if (date.toString().length === 13)\r\n            return true;\r\n        if (date.toString().length === 10)\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @title isTime\r\n * @description 检查日期是否有效, 时间戳也为有效时间(13位/10位)\r\n * @param time:any 待判断日期\r\n * @returns boolean\r\n * @version 0.1.0\r\n */\r\nfunction isTime(time) {\r\n    if (isNumber(time)) {\r\n        if (time.toString().length === 13)\r\n            return true;\r\n        if (time.toString().length === 10)\r\n            return true;\r\n    }\r\n    return time instanceof Date && !isNaN(time.getTime());\r\n}\r\n// 该方法用于检测给出的日期是否有效：\r\n// const isDateValid = (...val) => !Number.isNaN(new Date(...val).valueOf());\r\n// isDateValid(\"December 17, 1995 03:24:00\");  // true\n\n/**\r\n * @title FileTypeMap\r\n * @description 文件类型映射\r\n * @version 0.1.0\r\n */\r\nconst FileTypeMap = new Map([\r\n    ['Image', ['png', 'jpeg', 'jpg', 'png', 'bmp']],\r\n    ['Video', ['mp4', 'webm', 'ogg']],\r\n    ['PDF', ['pdf']],\r\n    ['Word', ['doc', 'docx']],\r\n    ['Excel', ['.xlsx', '.xls', '.csv']],\r\n]);\r\n/**\r\n * @title isFileExtension\r\n * @description 是指定字符串结尾\r\n * @param fileName string 文件名\r\n * @param list string[] 文件拓展名数组\r\n * @returns boolean\r\n * @version 0.1.0\r\n */\r\nfunction isFileExtension(fileName, list = []) {\r\n    if (typeof fileName !== 'string')\r\n        return false;\r\n    if (/\\.[a-zA-Z0-9]{1,}/.exec(fileName) === null)\r\n        return false;\r\n    if (list.length === 0)\r\n        return true;\r\n    const name = fileName.toLowerCase();\r\n    return list.some(i => name.endsWith(i) === true);\r\n}\r\n/**\r\n * @title isFile\r\n * @param fileName string\r\n * @param type {FileType}\r\n * @returns boolean\r\n * @version 0.1.0\r\n */\r\nfunction isFile(fileName, type) {\r\n    return isFileExtension(fileName, FileTypeMap.get(type));\r\n}\r\n/**\r\n * @title isImageFile\r\n * @param fileName string\r\n * @returns boolean\r\n * @version 0.1.0\r\n */\r\nfunction isImageFile(fileName) {\r\n    return isFileExtension(fileName, FileTypeMap.get('Image'));\r\n}\r\n/**\r\n * @title isVideoFile\r\n * @param fileName string\r\n * @returns boolean\r\n * @version 0.1.0\r\n */\r\nfunction isVideoFile(fileName) {\r\n    return isFileExtension(fileName, FileTypeMap.get('Video'));\r\n}\r\n/**\r\n * @title isPdfFile\r\n * @param fileName string\r\n * @returns boolean\r\n * @version 0.1.0\r\n */\r\nfunction isPdfFile(fileName) {\r\n    return isFileExtension(fileName, FileTypeMap.get('PDF'));\r\n}\r\n/**\r\n * @title isWordFile\r\n * @param fileName string\r\n * @returns boolean\r\n * @version 0.1.0\r\n */\r\nfunction isWordFile(fileName) {\r\n    return isFileExtension(fileName, FileTypeMap.get('Word'));\r\n}\r\n/**\r\n * @title isExcelFile\r\n * @param fileName string\r\n * @returns boolean\r\n * @version 0.1.0\r\n */\r\nfunction isExcelFile(fileName) {\r\n    return isFileExtension(fileName, FileTypeMap.get('Excel'));\r\n}\r\nconst isClient = typeof window !== 'undefined';\r\n/**\r\n * @title isBoolean\r\n * @description 是布尔值\r\n * @param val {unknown}\r\n * @returns {boolean}\r\n */\r\nconst isBoolean = (val) => typeof val === 'boolean';\r\nconst isWindow = (val) => typeof window !== 'undefined' && toString.call(val) === '[object Window]';\r\nconst isIOS =  isClient && window?.navigator?.userAgent && /iP(ad|hone|od)/.test(window.navigator.userAgent);\r\nconst hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);\n\n/**\r\n * @title isHexColor\r\n * @description 是颜色字符串或数字\r\n * @param hex string 三位/六位的十六进制的颜色\r\n * @returns boolean\r\n */\r\nfunction isHexColor(hex) {\r\n    if (hex.length === 3) {\r\n        hex += hex;\r\n    }\r\n    return (type(hex) === 'String')\r\n        && hex.length === 6 && !isNaN(Number('0x' + hex));\r\n}\n\n/**\r\n * @title isRegExp\r\n * @description 判断是否为正则表达式\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isRegExp(value) {\r\n    return type(value) === 'RegExp';\r\n}\n\n/**\r\n * @title isSymbol\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isSymbol(value) {\r\n    return typeof value === 'symbol';\r\n}\n\n/**\r\n * @title isError\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isError(value) {\r\n    return type(value) === 'Error' || value instanceof Error;\r\n}\n\nfunction isSet(value) {\r\n    return type(value) === 'Set';\r\n}\r\nfunction isEmptySet(value) {\r\n    return isSet(value) && value.size === 0;\r\n}\r\nfunction isEffectSet(value) {\r\n    return isSet(value) && value.size > 0;\r\n}\n\n/**\r\n * @title isMap\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isMap(value) {\r\n    return type(value) === 'Map';\r\n}\r\n/**\r\n * @title isEmptyMap\r\n * @description 是空Map\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isEmptyMap(value) {\r\n    if (isEmpty(value))\r\n        return false;\r\n    return isMap(value) && isUndefined(value.keys().next().value);\r\n}\r\n/**\r\n * @title isEffectMap\r\n * @description 是有效Map\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isEffectMap(value) {\r\n    if (isEmpty(value))\r\n        return false;\r\n    return isMap(value) && !isEmpty(value.keys().next().value);\r\n}\n\n/**\r\n * @title isPromise\r\n * @param value {unknown}\r\n * @returns {boolean}\r\n */\r\nfunction isPromise(value) {\r\n    return type(value) === 'Promise';\r\n}\n\nfunction IS(type$1) {\r\n    if (isString(type$1)) {\r\n        type$1 = type$1.replace(/ |\\n|\\t/gi, '');\r\n        // object string\r\n        if (/^{(.+)}$/.test(type$1)) {\r\n            const typeObject = JSON.parse(type$1.replace(/(\\w+)/gi, `\"$&\"`));\r\n            return (value) => {\r\n                if (!isObject(value))\r\n                    return false;\r\n                if (Object.keys(value).length !== Object.keys(typeObject).length)\r\n                    return false;\r\n                for (const key in typeObject) {\r\n                    if (type(value[key]) !== typeObject[key]\r\n                        && !IS(typeObject[key])(value[key])) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n        }\r\n        // array string\r\n        if (/^\\[(.+)\\]$/.test(type$1)) {\r\n            const [, newType] = /\\[(.+)\\]$/.exec(type$1) || [undefined, undefined];\r\n            const newTypes = isString(newType) ? newType.split(',') : [];\r\n            return (value) => {\r\n                if (!isArray(value))\r\n                    return false;\r\n                if (newTypes.length !== value.length)\r\n                    return false;\r\n                for (let i = 0; i < value.length; i++)\r\n                    if (type(value[i]) !== newTypes[i])\r\n                        return false;\r\n                return true;\r\n            };\r\n        }\r\n        // type array\r\n        if (/\\[\\]$/.test(type$1)) {\r\n            const [, newType] = /(.+)\\[\\]$/.exec(type$1) || [undefined, undefined];\r\n            return (value) => {\r\n                if (!isArray(value))\r\n                    return false;\r\n                for (let i = 0; i < value.length; i++)\r\n                    if (type(value[i]) !== newType\r\n                        && !IS(newType)(value[i])) {\r\n                        return false;\r\n                    }\r\n                return true;\r\n            };\r\n        }\r\n        // mult type\r\n        if (type$1.indexOf('|') > -1) {\r\n            const newTypes = type$1.split('|');\r\n            return (value) => {\r\n                return newTypes.includes((type(value)));\r\n            };\r\n        }\r\n    }\r\n    if (isObject(type$1)) {\r\n        return (value) => {\r\n            if (!isObject(value))\r\n                return false;\r\n            for (const key in type$1) {\r\n                if (type(value[key]) !== type$1[key]\r\n                    && !IS(type$1[key])(value[key])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n    }\r\n    if (isArray(type$1)) {\r\n        return (value) => {\r\n            if (!isArray(value) || value.length !== type$1.length)\r\n                return false;\r\n            for (let i = 0; i < value.length; i++) {\r\n                if (type(value[i]) !== type$1[i]\r\n                    && !IS(type$1[i])(value[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n    }\r\n    return (value) => {\r\n        return type$1 === type(value);\r\n    };\r\n}\n\n\n//# sourceMappingURL=index.esm.js.map\n\n\n//# sourceURL=webpack://react-markdown-parse/./node_modules/_check-it-type@0.4.2@check-it-type/lib/index.esm.js?");

/***/ }),

/***/ "./node_modules/_css-loader@6.7.3@css-loader/dist/runtime/api.js":
/*!***********************************************************************!*\
  !*** ./node_modules/_css-loader@6.7.3@css-loader/dist/runtime/api.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://react-markdown-parse/./node_modules/_css-loader@6.7.3@css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/_css-loader@6.7.3@css-loader/dist/runtime/noSourceMaps.js":
/*!********************************************************************************!*\
  !*** ./node_modules/_css-loader@6.7.3@css-loader/dist/runtime/noSourceMaps.js ***!
  \********************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://react-markdown-parse/./node_modules/_css-loader@6.7.3@css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://react-markdown-parse/./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/insertBySelector.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/insertBySelector.js ***!
  \****************************************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://react-markdown-parse/./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/insertStyleElement.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/insertStyleElement.js ***!
  \******************************************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://react-markdown-parse/./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://react-markdown-parse/./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/styleDomAPI.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/styleDomAPI.js ***!
  \***********************************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://react-markdown-parse/./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/styleTagTransform.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/styleTagTransform.js ***!
  \*****************************************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://react-markdown-parse/./node_modules/_style-loader@3.3.2@style-loader/dist/runtime/styleTagTransform.js?");

/***/ })

}]);